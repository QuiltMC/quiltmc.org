on:
  workflow_call:
    inputs:
      branch:
        required: false
        default: ${{ github.ref_name }}
        type: string
      run-id:
        required: false
        default: ${{ github.run_id }}
        type: string
    outputs:
      deployment-url:
        description: The URL of the deployed site.
        value: ${{ jobs.publish.outputs.deployment-url }}

jobs:
  publish:
    name: "Publish to Cloudflare Pages"
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.cloudflare-publish.outputs.url }}
    permissions:
      contents: read
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      GITHUB_RUN_ID: ${{ inputs.run-id }}
      GITHUB_TOKEN: ${{ secrets.COZY_PAT }}
    steps:
      - name: Download Website HTML
        uses: actions/download-artifact@v4
        with:
          name: html
          path: dist
          run-id: ${{ env.GITHUB_RUN_ID }}
          github-token: ${{ env.GITHUB_TOKEN }}
      - name: Download Website Functions
        uses: actions/download-artifact@v4
        with:
          name: functions
          path: functions
          run-id: ${{ env.GITHUB_RUN_ID }}
          github-token: ${{ env.GITHUB_TOKEN }}
      
      # The following hack is required because Cloudflare can't compile the workeers in the functions/ directory seperately from deploying, so it needs the packages they use in order to compile them at deployment time, but installing *everything* in package.json would be a waste. The build and publish steps can't go in the same job, because PR Previews have to build the site without publishing it (since they can't access secrets). Hopefully we can remove the need for this in the future by switching to Astro Actions, which should be compiled with the rest of the site.
      - name: Install packages required by functions
        run: npm install xml-js semver-sort string_decoder buffer
      - name: Publish to Cloudflare Pages
        id: cloudflare-publish # This step needs an ID because its outputs may be needed in subsequent jobs.
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          projectName: quiltmc-org
          directory: dist
          branch: ${{ inputs.branch }}
