---
import pkCache from "cache/pk.json";
import type { TeamMember, SystemMember, PkId } from "@data/Team";
import { t } from "i18next";
import SystemMembers from "./SystemMembers.astro";

export interface Props {
	member: TeamMember;
}
const { member } = Astro.props as Props;

// this is the "N/A" text, for anyone wondering
const na = t("team:n-a");
---

<div class="card is-team-member">
	<div class="card-content">
		{
			member.avatar && (
				<div class="avatar">
					<img
						class={member.pixelateAvatar ? "is-pixelated" : ""}
						src={member.avatar}
						alt={t("team:avatar-alt")}
					/>
				</div>
			)
		}

		<div class="media">
			<div class="media-content">
				<p class="title is-5 mb-5">
					{member.name ?? <>&nbsp;</>}
				</p>

				<p class="subtitle is-6">
					<i class="fab fa-fw fa-discord"></i>
					{member.discord ?? na}
				</p>

				<p class="subtitle is-6">
					<i class="fab fa-fw fa-github"></i>

					{
						member.github ? (
							<a href={`https://github.com/${member.github}`}>
								{member.github}
							</a>
						) : (
							na
						)
					}
				</p>

				<p class="subtitle is-6 is-links">
					{
						member.links && member.links.length > 0 ? (
							member.links.map((link) => (
								<a href={link.url}>
									<i class:list={["fa-lg", link.icon]} />
								</a>
							))
						) : (
							<>&nbsp;</>
						)
					}
				</p>
			</div>
		</div>

		{
			(member.description || member.systemMembers) && (
				<div class="content">
					{member.systemMembers && (
						<SystemMembers members={member.systemMembers} />
					)}

					<div class="description">{member.description}</div>
				</div>
			)
		}
	</div>
</div>
