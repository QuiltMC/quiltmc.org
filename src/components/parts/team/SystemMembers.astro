---
import pkCache from "cache/pk.json";
import type { SystemMember, PkId, SystemMembers } from "@data/Team";
import { t } from "i18next";

export interface Props {
	members: SystemMembers;
}

interface MemberIcon {
	avatarUrl: string;
	name: string;
}

const { members } = Astro.props as Props;

const icons: MemberIcon[] = [];
//@ts-ignore
if (members !== "---") {
	if (typeof members === "string") {
		const id = members.slice("pk:".length);
		//@ts-ignore
		icons.push(...pkCache[id]);
	} else {
		icons.push(
			...members.map(({ icon, name }) => {
				return { avatarUrl: icon, name };
			})
		);
	}
}
---

<div class="media system-member-title">
	<div class="media-content">
		<p class="subtitle is-6 has-text-centered">
			{t("team:plural-system")}
		</p>
	</div>
</div>

<div class="system-members">
	{
		icons && icons.length > 0 ? (
			icons.map((m) => (
				<div class="has-tooltip-arrow has-tooltip-bottom" data-tooltip={m.name}>
					<img src={m.avatarUrl} />
				</div>
			))
		) : (
			<div
				class="has-tooltip-arrow"
				data-tooltip={t("team:member-list-redacted")}
			>
				<i class="fa-2xl pl-1 fas fa-box-heart" />
			</div>
		)
	}
</div>
